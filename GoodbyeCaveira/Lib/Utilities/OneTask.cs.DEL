using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

#nullable disable

namespace GoodbyeCaveira.Lib.Utilities
{
	public class OneTask
	{
		private object statusLock = new object();
		private object taskLock = new object();

		private bool running = false;
		public bool IsRunning
		{
			get
			{
				lock (statusLock)
				{
					return running;
				}
			}
		}

		public event EventHandler<EventArgs> Completed;

		private Action action;
		private Task task = null;
		private CancellationTokenSource cancellationTokenSource = null;

		public async Task RunIfIdle()
		{
			lock (statusLock)
			{
				if (running)
				{
					return;
				}
				running = true;
			}
			lock (taskLock)
			{
				cancellationTokenSource = new CancellationTokenSource();
				task = new Task(action, cancellationTokenSource.Token);
				task.ContinueWith()
				task.Start();
			}
		}

		private async Task _Run()
		{

		}

		public OneTask(Action action)
		{
			this.action = action;
		}
	}
}
